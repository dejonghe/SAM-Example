AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Parameters:
  AppArchive:
    Type: String
    Description: 'Path to archive containing application'
  CloudToolsBucket:
    Type: String
    Description: 'S3 Bucket containing Cloud Tools'
  Environment:
    Type: String
    Description: 'Environment'
  Release:
    Type: String
    Description: 'Release Version'
  SwaggerDoc:
    Type: String
    Description: 'Swagger documentation file'
Resources:
  CatsIAM:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement: 
          - 
            Effect: 'Allow'
            Principal: 
              Service: 
                - 'lambda.amazonaws.com'
            Action: 
              - 'sts:AssumeRole'
      Policies: 
        - 
          PolicyName: 'LambdaBasic'
          PolicyDocument: 
            Version: '2012-10-17'
            Statement: 
              -  
                Effect: 'Allow'
                Action: 
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Join [ ':', [ 'arn:aws:logs', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'log-group:*:*' ] ]
              -  
                Effect: 'Allow'
                Action: 
                  - 'rekognition:DetectModerationLabels'
                Resource: '*'

  Cats:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.6
      CodeUri:
        Bucket: !Ref CloudToolsBucket
        Key: !Join [ '/', [ !Ref Release, !Ref AppArchive ] ]
      FunctionName: IsItPorn
      Description: 'Lambda receives API Gateway requests with a query string of a image URL to check if the image contains a male or female'
      MemorySize: 128
      Timeout: 10
      Role: !GetAtt [ CatsIAM, Arn ]
      Events:
        Scan:
          Type: Api
          Properties: 
            Path: /
            Method: get
            RestApiId: !Ref CatsApi

  CatsApi:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: !Ref Environment
      DefinitionUri:
        Bucket: !Ref CloudToolsBucket
        Key: !Join [ '/', [ !Ref Release, !Ref SwaggerDoc ] ]
      Variables:
        LambdaFunctionName: !Ref Cats
        Region: !Ref AWS::Region
        AccountId: !Ref AWS::AccountId
